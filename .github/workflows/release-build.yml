name: Release Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to build and upload (e.g., v0.1.4)"
        required: true
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    concurrency:
      group: release-build-${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event_name == 'release' && github.event.release.tag_name || github.ref_name }}
      cancel-in-progress: true
    container:
      image: devkitpro/devkitarm:latest
    steps:
      - name: Determine tag name
        id: tag
        run: |
          case "${{ github.event_name }}" in
            workflow_dispatch)
              TAG="${{ inputs.tag }}" ;;
            release)
              TAG="${{ github.event.release.tag_name }}" ;;
            push)
              TAG="${GITHUB_REF_NAME}" ;;
            *)
              echo "Unsupported event: ${{ github.event_name }}" >&2; exit 1 ;;
          esac
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Using tag: $TAG"

      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.tag.outputs.tag }}

      - name: Install ffmpeg (audio conversion)
        run: |
          apt-get update
          apt-get install -y ffmpeg

      # devkitpro/devkitarm image already includes the toolchain; install extra libs only if needed
      - name: Install 3DS dependencies (if needed)
        run: |
          true

      - name: Build (make)
        env:
          DEVKITPRO: /opt/devkitpro
          DEVKITARM: /opt/devkitpro/devkitARM
        run: |
          make -s

      - name: Archive artifact
        run: |
          mkdir -p artifacts
          cp -f Ballistica.3dsx artifacts/

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: artifacts/Ballistica.3dsx
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
